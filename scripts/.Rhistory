geom_sf(data = out2, alpha = 0.2, fill = 'blue') +
geom_sf(data = pts)
ggplot() +
geom_sf(data- out1, alpha = 0.2, fill = 'red') +
geom_sf(data = out2, alpha = 0.2, fill = 'blue') +
geom_sf(data = pts)
ggplot() +
geom_sf(data=  out1, alpha = 0.2, fill = 'red') +
geom_sf(data = out2, alpha = 0.2, fill = 'blue') +
geom_sf(data = pts)
plot1 <- keepers %>%
split(., 1:nrow(.))%>%
purrr::map(pts_cell) %>%
bind_rows() %>%
st_as_sf()
ggplot() +
geom_sf(data =  plot1, alpha = 0.2, fill = 'red') +
geom_sf(data = out2, alpha = 0.2, fill = 'blue') +
geom_sf(data = pts)
# raw data
out <- pts %>%
split(., 1:nrow(.))%>%
purrr::map(pts_cell) %>%
bind_rows() %>%
st_as_sf() %>%
mutate(rownum = 1:nrow(.), .before = x) %>%
st_intersects(., pts)
AB <- window_search2(out)  # ident_grp = 64, groups = 66
k <- gsub('row', '',names(AB))
keepers <- pts[k,]
# first iteration
out1 <- keepers %>%
split(., 1:nrow(.))%>%
purrr::map(pts_cell) %>%
bind_rows() %>%
st_as_sf()  %>%
mutate(rownum = 1:nrow(.), .before = x) %>%
st_intersects(., pts)
plot1 <- keepers %>%
split(., 1:nrow(.))%>%
purrr::map(pts_cell) %>%
bind_rows() %>%
st_as_sf()
AB <- window_search2(out1)
k <- gsub('row', '',names(AB))
keepers <- pts[k,]
out2 <- keepers %>%
split(., 1:nrow(.))%>%
purrr::map(pts_cell) %>%
bind_rows() %>%
st_as_sf()
ggplot() +
geom_sf(data = plot1, alpha = 0.2, fill = 'red') +
geom_sf(data = out2, alpha = 0.2, fill = 'blue') +
geom_sf(data = pts)
ggplot() +
#  geom_sf(data = plot1, alpha = 0.2, fill = 'red') +
geom_sf(data = out2, alpha = 0.2, fill = 'blue') +
geom_sf(data = pts)
ggplot() +
geom_sf(data = plot1, alpha = 0.2, fill = 'red') +
#  geom_sf(data = out2, alpha = 0.2, fill = 'blue') +
geom_sf(data = pts)
ggplot() +
# geom_sf(data = plot1, alpha = 0.2, fill = 'red') +
geom_sf(data = out2, alpha = 0.2, fill = 'blue') +
geom_sf(data = pts)
shhh <- suppressPackageStartupMessages
#set_here(path = "/hdd/revisionary_taxonomy")
shhh(library(here))
shhh(library(tidyverse))
shhh(library(sf))
shhh(library(tigris))
shhh(library(ggspatial))
source('functions.R')
rm(shhh)
astragalus <- st_read(paste0(here(), '/data/processed/', 'astragalus.shp'), quiet = T)
eriogonum <- st_read(paste0(here(), '/data/processed/', 'eriogonum.shp'), quiet = T)
townsendia <- st_read(paste0(here(), '/data/processed/', 'townsendia.shp'), quiet = T)
pts <- bind_rows(astragalus, eriogonum, townsendia) %>%
st_transform(4269)
bb <- pts %>%
st_transform(32613) %>%
st_buffer(50000) %>%
st_transform(4269) %>%
st_convex_hull() %>%
st_bbox()
bb1 <- pts %>%
st_transform(32613) %>%
st_buffer(7500) %>%
st_transform(4269) %>%
st_convex_hull() %>%
st_bbox()
rm(astragalus, eriogonum, townsendia)
counties_filt <- st_read(paste0(here(), '/data/processed/counties.shp'),
quiet = T)
counties_filt1 <- st_cast(counties_filt, 'MULTILINESTRING')
ggplot(counties_filt1) +
geom_sf() +
geom_sf(data = pts, aes(color = scntfcN)) +
coord_sf(xlim = c(bb1[1], bb1[3]), ylim = c(bb1[2], bb1[4])) +
theme_bw()
rm(bb)
basemap <- readRDS(paste0(here(), "/data/processed//file82021d31710"))
ggmap::ggmap(basemap) +
geom_sf(data = counties_filt1, inherit.aes = FALSE,) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE,) +
coord_sf(xlim = c(bb1[1], bb1[3]), ylim = c(bb1[2], bb1[4])) +
theme_bw()
cnty_rds <- st_read(paste0(here(), '/data/processed/roads.shp'), quiet =T)
table(cnty_rds$RTTYP)
spp_cols <- c(
'darkorange4', 'darkseagreen4',
'slateblue4', 'deeppink4',
'tan2', 'thistle4')
rds_coarse <- filter(cnty_rds, RTTYP %in% c('I','U','S'))
topo_base <- ggmap::ggmap(basemap) +
geom_sf(data = counties_filt1, lty = 3, inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE) +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
scale_color_manual(values= spp_cols)+
coord_sf(xlim = c(bb1[1], bb1[3]), ylim = c(bb1[2], bb1[4])) +
labs(title="Sampled Populations",  x ="", y = "", color = 'Species') +
theme_bw() +
theme(axis.text.x=element_blank(),
axis.text.y = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position="bottom",
legend.direction = "horizontal"
) +
theme(panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_rect(linetype = 2, size = 0.5, colour = 1))
rm(cnty_rds, counties_filt, counties_filt1, topo_base, roads_coarse, basemap, spp_cols,
closest_sites, grps_most_dispersed, john_tigger, population_finder, reed_csv, bb1, rds_coarse, target_taxon_grp_fndr)
# raw data
out <- pts %>%
split(., 1:nrow(.))%>%
purrr::map(pts_cell) %>%
bind_rows() %>%
st_as_sf() %>%
mutate(rownum = 1:nrow(.), .before = x) %>%
st_intersects(., pts)
AB <- window_search2(out)  # ident_grp = 64, groups = 66
k <- gsub('row', '',names(AB))
keepers <- pts[k,]
# first iteration
out1 <- keepers %>%
split(., 1:nrow(.))%>%
purrr::map(pts_cell) %>%
bind_rows() %>%
st_as_sf()  %>%
mutate(rownum = 1:nrow(.), .before = x) %>%
st_intersects(., pts)
plot1 <- keepers %>%
split(., 1:nrow(.))%>%
purrr::map(pts_cell) %>%
bind_rows() %>%
st_as_sf()
ggplot() +
geom_sf(data = plot1, alpha = 0.2, fill = 'red') +
geom_sf(data = pts)
ggplot() +
geom_sf(data = plot1, alpha = 0.2, fill = 'red') +
geom_sf(data = pts) +
theme_bw()
View(keepers)
View(AB)
out1 <- keepers %>%
split(., 1:nrow(.))%>%
purrr::map(pts_cell) %>%
bind_rows() %>%
st_as_sf()  %>%
mutate(rownum = 1:nrow(.), .before = x) %>%
st_intersects(., pts)
View(out1)
ggplot() +
geom_sf(data = plot1, alpha = 0.2, fill = 'red') +
geom_sf(data = pts) +
theme_bw()
View(plot1)
View(plot1)
View(out1)
plot1 <- keepers %>%
split(., 1:nrow(.))%>%
purrr::map(pts_cell) %>%
bind_rows() %>%
st_as_sf()
ggplot() +
geom_sf(data = plot1, alpha = 0.2, fill = 'red') +
geom_sf(data = pts) +
theme_bw()
View(keepers)
View(out1)
View(plot1)
polys1 <- keepers %>%
split(., 1:nrow(.))%>%
purrr::map(pts_cell) %>%
bind_rows() %>%
st_as_sf()
ggplot() +
geom_sf(data = polys1, alpha = 0.2, fill = 'red') +
geom_sf(data = pts) +
theme_bw()
View(polys1)
st_intersection(pts, polys1)
out <- st_intersection(pts, polys1)
View(out)
polys1 <- keepers %>%
split(., 1:nrow(.))%>%
purrr::map(pts_cell) %>%
bind_rows() %>%
st_as_sf() %>%
mutate(POLY_ID = 1:nrow(.))
out <- st_intersection(pts, polys1)
View(out)
pts <- pts %>% mutate(PL_ID = 1:nrow(.))
out <- st_intersection(pts, polys1)
out %>% group_by(PL_ID) %>%
count(POLY_ID)
View(out)
out %>%
ungroup() %>%
group_by(PL_ID) %>%
count(POLY_ID)
View(pts)
out %>%
ungroup() %>%
group_by(PL_ID) %>%
tally()
out %>%
ungroup() %>%
group_by(PL_ID) %>%
tally() %>%
filter(n >2)
tp <- out %>%
ungroup() %>%
group_by(PL_ID) %>%
tally() %>%
filter(n >2)
ggplot() +
geom_sf(data = polys1, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
tp <- out %>%
ungroup() %>%
group_by(PL_ID) %>%
tally() %>%
filter(n >1)
ggplot() +
geom_sf(data = polys1, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
View(tp)
View(out)
polys_to_meld <- out %>%
filter(PL_ID %in% tp$PL_ID)
View(polys_to_meld)
st_intersection(polys1, pts)
outer1 <- st_intersection(polys1, pts)
View(plot1)
ggplot() +
geom_sf(data = outer1, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
ggplot() +
geom_sf(data = polys1, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
View(outer1)
ggplot() +
geom_sf(data = polys1, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
outer1 <-st_join(polys1, pts)
outer1 <-st_join(polys1, tp)
View(outer1)
outer1 <-st_intersection(polys1, tp)
View(outer1)
outer1 <-st_intersection(polys1, tp) %>%
select(POLY_ID)
outer1 <-st_intersection(polys1, tp) %>%
distinct(POLY_ID)
View(outer1)
ggplot() +
geom_sf(data = OUTER1, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
ggplot() +
geom_sf(data = outer1, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
outer1 <-st_intersection(polys1, tp) %>%
distinct(POLY_ID, .keep_all = T)
ggplot() +
geom_sf(data = outer1, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
View(outer1)
outer1 <-st_intersection(polys1, tp) #%>%
outer1 <-st_join(polys1, tp) %>%
distinct(POLY_ID, .keep_all = T)
View(outer1)
outer1 <-st_join(polys1, tp) %>%
distinct(POLY_ID, .keep_all = T)
ggplot() +
geom_sf(data = outer1, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
outer1 <-st_join(polys1, tp, left = F) %>%
distinct(POLY_ID, .keep_all = T)
ggplot() +
geom_sf(data = outer1, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
outer1 <-st_join(polys1, tp, left = F) %>%
distinct(POLY_ID, .keep_all = T) %>%
st_union() %>%
st_cast("POLYGON")
ggplot() +
geom_sf(data = outer1, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
new_polys <-st_join(polys1, tp, left = F) %>%
distinct(POLY_ID, .keep_all = T) %>%
st_union() %>%
st_cast("POLYGON")
ggplot() +
geom_sf(data = new_polys, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
pt_grps <- st_intersection(pts, new_polys)
View(pt_grps)
View(new_polys)
new_polys <-st_join(polys1, tp, left = F) %>%
distinct(POLY_ID, .keep_all = T) %>%
st_union() %>%
st_cast("POLYGON") %>%
st_as_sf() %>%
mutate(CAST_ID = 1:nrow(.))
pt_grps <- st_intersection(pts, new_polys)
View(pt_grps)
pt_grps <- st_intersection(pts, new_polys) %>%
group_by(CAST_ID) %>%
summarize()
View(pt_grps)
View(pt_grps)
pt_grps <- st_intersection(pts, new_polys) %>%
group_by(CAST_ID)
View(pt_grps)
split(pt_grps, f = .$CAST_ID)
pt_grps <| split(., f = .$CAST_ID)
pt_grps <| split(pt_grps, ~CAST_ID)
split(pt_grps, ~CAST_ID)
split(pt_grps, ~CAST_ID) %>% st_union() %>%
st_centroid()
babadook <- split(pt_grps, ~CAST_ID) %>%
st_union() %>%
st_centroid()
babadook <- split(pt_grps, ~CAST_ID) %>%
st_union() %>%
st_cast('MULTIPOINT') %>%
st_centroid()
babadook <- split(pt_grps, ~CAST_ID) #%>%
View(babadook)
babadook[["1"]]
View(babadook)
babadook <- pt_grps %>%
group_by(CAST_ID) %>%
st_union() %>%
st_cast('MULTIPOINT') %>%
st_centroid()
View(babadook)
babadook <- split(pt_grps, ~CAST_ID)
center_windows <- function(x){
output <- x %>%
st_as_sf() %>%
st_union() %>%
st_cast('MULTIPOINT') %>%
st_centroid()
return(output)
}
lapply(center_windows, babadook)
lapply(babadook, center_windows)
new_centers <- lapply(babadook, center_windows)
View(pts_cell)
new_centers <- lapply(lapply(babadook, center_windows), pts_cell)
ggplot() +
geom_sf(data = new_polys, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
ggplot() +
geom_sf(data = new_centers, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
new_centers <- lapply(lapply(babadook, center_windows), pts_cell) %>%
st_as_sf()
View(new_centers)
new_centers <- lapply(lapply(babadook, center_windows), pts_cell) %>% bind_rows()
ggplot() +
geom_sf(data = new_centers, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
center_windows <- function(x){
output <- x %>%
st_as_sf() %>%
st_union() %>%
#    st_cast('MULTIPOINT') %>%
st_centroid()
return(output)
}
new_centers <- lapply(lapply(babadook, center_windows), pts_cell) %>% bind_rows()
ggplot() +
geom_sf(data = new_centers, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
View(pts_cell)
pts_cell <- function(x, utmzone, buf_dist, out_crs) {
buffered <- x %>%
st_as_sf() %>%
st_transform(32613) %>%
st_buffer(14000) %>%
st_transform(4269) %>%
st_bbox() %>%
st_as_sfc() %>%
st_as_sf()
return(buffered)
}
rm(cnty_rds, counties_filt, counties_filt1, topo_base, roads_coarse, basemap, spp_cols,
closest_sites, grps_most_dispersed, john_tigger, population_finder, reed_csv, bb1, rds_coarse, target_taxon_grp_fndr)
# raw data
out <- pts %>%
split(., 1:nrow(.))%>%
purrr::map(pts_cell) %>%
bind_rows() %>%
st_as_sf() %>%
mutate(rownum = 1:nrow(.), .before = x) %>%
st_intersects(., pts)
AB <- window_search2(out)  # ident_grp = 64, groups = 66
k <- gsub('row', '',names(AB))
keepers <- pts[k,]
# first iteration
polys1 <- keepers %>%
split(., 1:nrow(.))%>%
purrr::map(pts_cell) %>%
bind_rows() %>%
st_as_sf() %>%
mutate(POLY_ID = 1:nrow(.))
pts <- pts %>% mutate(PL_ID = 1:nrow(.))
out <- st_intersection(pts, polys1)
tp <- out %>%
ungroup() %>%
group_by(PL_ID) %>%
tally() %>%
filter(n >1)
# 1 - Intersect all points to the remaining cells.
# 2 - determine which points are present in multiple windows
# 3 - if a cell does NOT contain any novel points - drop it
new_polys <-st_join(polys1, tp, left = F) %>%
distinct(POLY_ID, .keep_all = T) %>%
st_union() %>%
st_cast("POLYGON") %>%
st_as_sf() %>%
mutate(CAST_ID = 1:nrow(.))
pt_grps <- st_intersection(pts, new_polys) %>%
group_by(CAST_ID)
babadook <- split(pt_grps, ~CAST_ID)
center_windows <- function(x){
output <- x %>%
st_as_sf() %>%
st_union() %>%
#    st_cast('MULTIPOINT') %>%
st_centroid()
return(output)
}
new_centers <- lapply(lapply(babadook, center_windows), pts_cell) %>% bind_rows()
# let us see about doing the following to these results:
# 1 - Intersect all points to the remaining cells.
# 2 - determine which points are present in multiple windows
# 3 - if a cell does NOT contain any novel points - drop it
# 4 - union all points per cell
# 5 - take the centroid of the unioned points
# 6 - buffer from there
ggplot() +
geom_sf(data = new_centers, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
output <- x %>%
st_as_sf() %>%
st_union() %>%
st_cast('MULTIPOINT') %>%
st_centroid()
center_windows <- function(x){
output <- x %>%
st_as_sf() %>%
st_union() %>%
st_cast('MULTIPOINT') %>%
st_centroid()
return(output)
}
new_centers <- lapply(lapply(babadook, center_windows), pts_cell) %>% bind_rows()
ggplot() +
geom_sf(data = new_centers, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
ggplot() +
geom_sf(data = new_centers, alpha = 0.2, fill = 'red') +
geom_sf(data = pts) +
theme_bw()
ggplot() +
geom_sf(data = new_centers, alpha = 0.2, fill = 'red') +
geom_sf(data = tp) +
theme_bw()
