st_transform(32613) %>%
st_buffer(7500) %>%
st_transform(4269) %>%
st_convex_hull() %>%
st_bbox()
rm(astragalus, eriogonum, townsendia)
counties_filt <- st_read(paste0(here(), '/data/processed/counties.shp'),
quiet = T)
counties_filt1 <- st_cast(counties_filt, 'MULTILINESTRING')
ggplot(counties_filt1) +
geom_sf() +
geom_sf(data = pts, aes(color = scntfcN)) +
coord_sf(xlim = c(bb1[1], bb1[3]), ylim = c(bb1[2], bb1[4])) +
theme_bw()
rm(bb)
basemap <- readRDS(paste0(here(), "/data/processed//file82021d31710"))
ggmap::ggmap(basemap) +
geom_sf(data = counties_filt1, inherit.aes = FALSE,) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE,) +
coord_sf(xlim = c(bb1[1], bb1[3]), ylim = c(bb1[2], bb1[4])) +
theme_bw()
cnty_rds <- st_read(paste0(here(), '/data/processed/roads.shp'), quiet =T)
table(cnty_rds$RTTYP)
spp_cols <- c(
'darkorange4', 'darkseagreen4',
'slateblue4', 'deeppink4',
'tan2', 'thistle4')
rds_coarse <- filter(cnty_rds, RTTYP %in% c('I','U','S'))
topo_base <- ggmap::ggmap(basemap) +
geom_sf(data = counties_filt1, lty = 3, inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE) +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
scale_color_manual(values= spp_cols)+
coord_sf(xlim = c(bb1[1], bb1[3]), ylim = c(bb1[2], bb1[4])) +
labs(title="Sampled Populations",  x ="", y = "", color = 'Species') +
theme_bw() +
theme(axis.text.x=element_blank(),
axis.text.y = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position="bottom",
legend.direction = "horizontal"
) +
theme(panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_rect(linetype = 2, size = 0.5, colour = 1))
rm(cnty_rds, counties_filt, counties_filt1, topo_base, basemap, spp_cols,
closest_sites, grps_most_dispersed, john_tigger, population_finder, reed_csv, bb1, rds_coarse, target_taxon_grp_fndr)
# raw data
out <- pts %>%
split(., 1:nrow(.))%>%
purrr::map(pts_cell,
utmzone = 32613,
buf_dist = 14000,
out_crs = 4269
) %>%
bind_rows() %>%
st_as_sf() %>%
mutate(rownum = 1:nrow(.), .before = x) %>%
st_intersects(., pts)
AB <- window_search(out)  # ident_grp = 64, groups = 66
k <- gsub('row', '',names(AB))
keepers <- pts[k,]
# first iteration
polys1 <- keepers %>%
split(., 1:nrow(.))%>%
purrr::map(pts_cell,
utmzone = 32613,
buf_dist = 16000,
out_crs = 4269) %>%
bind_rows() %>%
st_as_sf() %>%
mutate(POLY_ID = 1:nrow(.))
testput <- window_center(x = pts, y = polys1) %>%
st_as_sf()
# Now collect points which just narrowly missed being included in windows
outr <- st_within(pts, testput)
outr <- unlist(
lapply(
as.numeric(outr) == 0, as.numeric
)
)
pts1 <- pts[is.na(outr),]
out1 <- pts1 %>%
split(., 1:nrow(.)) %>%
purrr::map(pts_cell,
utmzone = 32613,
buf_dist = 16000,
out_crs = 4269
) %>%
bind_rows() %>%
st_as_sf()
colnames(out1) <- 'geometry'
st_geometry(out1)  <- 'geometry'
windows <- rbind(testput, out1) %>% mutate(windowID = 1:nrow(.))
ggplot() +
geom_sf(data = windows) +
geom_sf(data = pts) +
theme_bw()
rm(AB, keepers, out, out1, polys1, pts1, testput, outr, k, pts_cell, window_center, window_search)
testy_d <- st_distance(pts, windows %>%
st_centroid())
pts <- cbind(pts,
'window' = apply(testy_d, 1, which.min)
)
ggplot(pts) +
geom_sf(data = windows) +
geom_sf(aes(colour = window)) +
theme_bw()
rm(testy_d)
wndws_basemap_dl <- function(x){
gg_bb <- st_bbox(x)
names(gg_bb) <- c('left', 'bottom', 'right', 'top')
gg_bm <- ggmap::get_stamenmap(gg_bb,  maptype = "terrain")
window_basemap <- tempfile(tmpdir = paste0(
here(), '/data/basemap_imagery/window_bm', x$windowID))
saveRDS(gg_bm, file = window_basemap)
Sys.sleep(3) # three seconds
}
windowsL <- split(windows, ~windowID)
lapply(windowsL[1:2], wndws_basemap_dl)
lapply(windowsL[1:2], wndws_basemap_dl)
here()
wndws_basemap_dl <- function(x){
gg_bb <- st_bbox(x)
names(gg_bb) <- c('left', 'bottom', 'right', 'top')
gg_bm <- ggmap::get_stamenmap(gg_bb,  maptype = "terrain")
window_basemap <- tempfile(tmpdir = paste0(
here(), '/data/basemap_imagery/window_bm', x$windowID))
saveRDS(gg_bm, file = window_basemap)
Sys.sleep(3) # three seconds
}
windowsL <- split(windows, ~windowID)
lapply(windowsL[1:2], wndws_basemap_dl)
wndws_basemap_dl <- function(x){
gg_bb <- st_bbox(x)
names(gg_bb) <- c('left', 'bottom', 'right', 'top')
gg_bm <- ggmap::get_stamenmap(gg_bb,  maptype = "terrain")
window_basemap <- paste0(tmpdir = paste0(
here(), '/data/basemap_imagery/window_bm', x$windowID))
saveRDS(gg_bm, file = window_basemap)
Sys.sleep(3) # three seconds
}
lapply(windowsL[1:2], wndws_basemap_dl)
list.files(paste0(here(), '/data/basemap_imagery/window_bm'))
list.files(paste0(here(), '/data/basemap_imagery'))
windows_basemap <- paste0(paste0(here(), '/data/basemap_imagery'),
list.files(paste0(here(), '/data/basemap_imagery')
))
A <- readRDS(windows_basemap[1])
print(windows_basemap)
windows_basemap <- paste0(paste0(here(), '/data/basemap_imagery/'),
list.files(paste0(here(), '/data/basemap_imagery')
))
A <- readRDS(windows_basemap[1])
ggmap::ggmap(A)
wndws_basemap_dl <- function(x){
gg_bb <- st_bbox(x)
names(gg_bb) <- c('left', 'bottom', 'right', 'top')
gg_bm <- ggmap::get_stamenmap(gg_bb, zoom = 13, maptype = "terrain")
window_basemap <- paste0(tmpdir = paste0(
here(), '/data/basemap_imagery/window_bm', x$windowID))
saveRDS(gg_bm, file = window_basemap)
Sys.sleep(3) # three seconds
}
lapply(windowsL[1:2], wndws_basemap_dl)
A <- readRDS(windows_basemap[1])
ggmap::ggmap(A)
ggmap::ggmap(A) +
geom_sf(windows)
ggmap::ggmap(A) +
geom_sf(dadta = windows)
ggmap::ggmap(A) +
geom_sf(data = windows)
ggmap::ggmap(A) +
geom_sf(data = windows, inherit.aes = FALSE)
ggmap::ggmap(A) +
geom_sf(data = windows, inherit.aes = FALSE, fill = NA)
ggmap::ggmap(A) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA)
ggmap::ggmap(A) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE)
wndws_basemap_dl <- function(x){
gg_bb <- st_bbox(x)
names(gg_bb) <- c('left', 'bottom', 'right', 'top')
gg_bm <- ggmap::get_stamenmap(gg_bb, zoom = 14, maptype = "terrain")
window_basemap <- paste0(tmpdir = paste0(
here(), '/data/basemap_imagery/window_bm', x$windowID))
saveRDS(gg_bm, file = window_basemap)
Sys.sleep(3) # three seconds
}
windowsL <- split(windows, ~windowID)
lapply(windowsL[1:2], wndws_basemap_dl)
windows_basemap <- paste0(paste0(here(), '/data/basemap_imagery/'),
list.files(paste0(here(), '/data/basemap_imagery')
))
A <- readRDS(windows_basemap[1])
ggmap::ggmap(A) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE)
wndws_basemap_dl <- function(x){
gg_bb <- st_bbox(x)
names(gg_bb) <- c('left', 'bottom', 'right', 'top')
gg_bm <- ggmap::get_stamenmap(gg_bb, zoom = 13, maptype = "terrain")
window_basemap <- paste0(tmpdir = paste0(
here(), '/data/basemap_imagery/window_bm', x$windowID))
saveRDS(gg_bm, file = window_basemap)
Sys.sleep(3) # three seconds
}
windowsL <- split(windows, ~windowID)
lapply(windowsL[1:2], wndws_basemap_dl)
windows_basemap <- paste0(paste0(here(), '/data/basemap_imagery/'),
list.files(paste0(here(), '/data/basemap_imagery')
))
A <- readRDS(windows_basemap[1])
ggmap::ggmap(A) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE)
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE)
B <- readRDS(windows_basemap[2])
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE)
lapply(windowsL[3:39], wndws_basemap_dl)
B <- readRDS(windows_basemap[10])
windows_basemap <- paste0(paste0(here(), '/data/basemap_imagery/'),
list.files(paste0(here(), '/data/basemap_imagery')
))
B <- readRDS(windows_basemap[10])
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE)
B <- readRDS(windows_basemap[17])
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE)
B <- readRDS(windows_basemap[23])
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE)
B <- readRDS(windows_basemap[31])
B <- readRDS(windows_basemap[31])
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE)
counties_filt <- st_read(paste0(here(), '/data/processed/counties.shp'),
quiet = T)
counties_filt1 <- st_cast(counties_filt, 'MULTILINESTRING')
ggplot(counties_filt1) +
geom_sf() +
geom_sf(data = pts, aes(color = scntfcN)) +
coord_sf(xlim = c(bb1[1], bb1[3]), ylim = c(bb1[2], bb1[4])) +
theme_bw()
ggplot(counties_filt1) +
geom_sf() +
geom_sf(data = pts, aes(color = scntfcN)) +
coord_sf(xlim = c(bb1[1], bb1[3]), ylim = c(bb1[2], bb1[4])) +
theme_bw()
cnty_rds <- st_read(paste0(here(), '/data/processed/roads.shp'), quiet =T)
table(cnty_rds$RTTYP)
rds_coarse <- filter(cnty_rds, RTTYP %in% c('I','U','S'))
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE) +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20')
head(rds_coarse)
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE) +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME))
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE) +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), )
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE) +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE)
B <- readRDS(windows_basemap[12])
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE) +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE)
View(rds_coarse)
ggplot(counties_filt1) +
geom_sf() +
geom_sf(data = pts, aes(color = scntfcN)) +
coord_sf(xlim = c(bb1[1], bb1[3]), ylim = c(bb1[2], bb1[4])) +
theme_bw()
rds_coarse <- filter(cnty_rds, RTTYP %in% c('I','U','S')) %>%
summarise(FULLNAME)
rds_coarse <- filter(cnty_rds, RTTYP %in% c('I','U','S')) %>%
group_by(FULLNAME) %>%
summarize(geometry = st_union(geometry))
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE) +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE)
B <- readRDS(windows_basemap[16])
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE) +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE)
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE) +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE)
B <- readRDS(windows_basemap[19])
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE) +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE)
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE) +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = cnty_rds)
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE) +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE)
B <- readRDS(windows_basemap[23])
ggmap::ggmap(B) +
geom_sf(data = windows[1,], inherit.aes = FALSE, fill = NA) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE) +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE)
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE) +
head(rds_coarse)
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE)
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 3)
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 3)
B <- readRDS(windows_basemap[7])
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 3)
B <- readRDS(windows_basemap[9])
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 3)
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 5)
B <- readRDS(windows_basemap[4])
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 5)
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 5) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 5) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 5) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.7, hjust=0.5))
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 5) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.9, hjust=0.5))
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 5) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.8, hjust=0.5))
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 5) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.7, hjust=0.5))
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 5) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.7, hjust=0.5),
axis.text.x = element_text(angle = 45, vjust = 0.7, hjust=0.5))
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 5) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.7, hjust=0.5),
axis.text.y = element_text(angle = 45, vjust = 0.7, hjust=0.5))
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 5) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.7, hjust=0.5),
axis.text.y = element_text(angle = 45, vjust = 0.7, hjust=0.5))
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 5) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.7, hjust=0.5),
axis.text.y = element_text(angle = 45, vjust = 0.7, hjust=0.5)) +
xlab(NULL) +
ylab(NULL)
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 5) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.7, hjust=0.5),
axis.text.y = element_text(angle = 45, vjust = 0.7, hjust=0.5),
legend.position = "none") +
xlab(NULL) +
ylab(NULL)
B <- readRDS(windows_basemap[19])
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 5) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.7, hjust=0.5),
axis.text.y = element_text(angle = 45, vjust = 0.7, hjust=0.5),
legend.position = "none") +
xlab(NULL) +
ylab(NULL)
B <- readRDS(windows_basemap[20])
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 5) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.7, hjust=0.5),
axis.text.y = element_text(angle = 45, vjust = 0.7, hjust=0.5),
legend.position = "none") +
xlab(NULL) +
ylab(NULL)
B <- readRDS(windows_basemap[21])
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 5) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.7, hjust=0.5),
axis.text.y = element_text(angle = 45, vjust = 0.7, hjust=0.5),
legend.position = "none") +
xlab(NULL) +
ylab(NULL)
B <- readRDS(windows_basemap[22])
ggmap::ggmap(B) +
geom_sf(data = cnty_rds,  inherit.aes = FALSE, colour = 'grey40') +
geom_sf(data = rds_coarse, inherit.aes = F, colour = 'grey20') +
geom_sf_label(data = rds_coarse, aes(label = FULLNAME), inherit.aes = FALSE) +
geom_sf(data = pts, aes(color = scntfcN), inherit.aes = FALSE, size = 5) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.7, hjust=0.5),
axis.text.y = element_text(angle = 45, vjust = 0.7, hjust=0.5),
legend.position = "none") +
xlab(NULL) +
ylab(NULL)
knitr::opts_chunk$set(echo = TRUE)
library(sdm)
library(tidyverse) # data tidying
library(sf) # spatial data compliant with tidyverse
library(raster) # raster data
library(here)
source(here::here('scripts/sdm_functions.R'))
PA_REG_DF1 <- split(PA_REG_DF, f = PA_REG_DF$binomial)
